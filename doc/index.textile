h1. dicto 1.3 - documentation

__by Tomasz 'pewniak747' Pewiński__

"web":http://pewniak747.github.com/dicto

h2. Overview

Dicto is free, open-source software for learning vocabulary. It provides simple, intuitive user interface, useful testing modes and more handy functions. Current version is 1.3.

h3. Features of dicto:

* handling multiple files in *.dic or *txt formats 
* words handling: adding, editing, deleting and dynamic searching 
* dictionary sorting 
* dictionary printing 
* support for synonymes 
* simple testing in both ways (native -> foreign, foreign -> native) 
* real examining (includes real grades!) 
* displaying learn statistics and dictionary statistics 

See README for more details...

h2. Table of contents

* "README":../README.textile
* "CHANGELOG":../changelog.textile
* All classes 
** WMain 
** WDialog 
** WPrepare 
** WProps 
** WAbout 
** CDocument 
** CEntry 
* Author 
* Acknowledgments 

h2. All classes

h3. WMain

__Implementation: wmain.cpp__
__Headers: wmain.h, wdialog.h, cdocument.h, wprepare.h, wabout.h, wprops.h, wprint.h__

h3. WDialog 

h3. WPrepare 

h3. WProps 

__Implementation: wprops.cpp__
__Headers: wprops.h, wmain.h__
__Inherits: QWidget__

h4. Widgets:

* QLabel fileLabel – holds filename
* QLabel nativeLabel – holds nativeEdit label
* QLabel foreignLabel – holds foreignEdit label
* QLabel wordsLabel – holds number of words
* QLabel passedLabel – hold number and percentage of passed words
* QLineEdit nativeEdit – field for native language
* QLineEdit foreignEdit – field for foreign language
* QPushButton resetButton – button to reset statistics
* QPushButton okButton – button to confirm and quit

h4. Public functions:

* WProps(QWidget *parent)

h4. Private slots:

* void updateProps();
* void resetStats();
* void submitStats();
* void closeEvent(QCloseEvent *e);


h4. Member function documentation:

h5. void WProps::WProps(QWidget *parent)

This is WProps window constructor. 0 is passed as parent.

h5. void WProps::updateProps()

Updates all WProps widgets with values from CDocument.

h5. void Wprops::resetStats()

Launches CDocument::resetStats() and WProps::updateProps()

h5. void WProps:: submitStats()

Saves new properties to CDocument and closes window.

h5. void WProps::closeEvent(QCloseEvent *e)

Sets WMain to enabled mode and closes window.

h3. WAbout

__Implementation: wabout.cpp__
__Headers: wabout.h, wmain.h__
__Inherits: QWidget__

h4. Widgets:

* QLabel image – holds image displayed in window
* QLabel infoLabel – holds information about dicto
* QLabel urlLabel – holds url to http://pewniak747.github.com/dicto
* QPushButton okButton – closing button

h4. Public functions:

* WAbout(QWidget *parent)

h4. Private functions:

* void closeEvent(QCloseEvent *a)


h4. Member function documentation:

h5. WAbout::WAbout(QWidget *parent)

This is the WAbout window constructor. 0 us passed as its parent.

h5. void Wabout::closeEvent(QCloseEvent *a)

Close event sets enabled mode to WMain and closes window.

h3. CDocument 

h3. CEntry 

h2. Author

Tomasz Pewiński - student of second grade High School of Poznań. Interested in computer science, programming and webdesign, sport (tennis), books and music. 
Follow me on twitter: http://twitter.com/pewniak747
Follow me on github: http://github.com/pewniak747
Email me: pewniak747@gmail.com

h2. Acknowledgments

Dicto would be nothing without its users. I'd like to thank everybody who advises and supports me during development.
